<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"mybatis-3-mapper.dtd">
<mapper namespace="com.wind.busi.yyhr">

	<select id="selectBusi_hr" resultType="hashMap" parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			a.*
			<if test="lable_cid != null and lable_cid != ''">
			, b.label_id, b.label_code, b.label_name, b.c_id
			</if>
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from v_busi_hr a
			<if test="lable_cid != null and lable_cid != ''">
				left outer join (select * from v_hr_label where c_id = #{lable_cid}
				<if test="label_code != null and label_code != ''">
					and label_code = #{label_code}
				</if>
				) b on a.hr_id = b.hr_id
			</if>
		<where>
			<if test="HR_NAME_LIKE != null and HR_NAME_LIKE != ''">
				hr_name like #{HR_NAME_LIKE} || '%'
			</if>
			<if test="IDCARD_LIKE != null and IDCARD_LIKE != ''">
				and idcard like #{IDCARD_LIKE} || '%'
			</if>
			<if test="IDCARD != null and IDCARD != ''">
				and idcard = #{IDCARD}
			</if>
			<if test="LD_TYPE != null and LD_TYPE != ''">
				and ld_type = #{LD_TYPE}
			</if>
			<if test="HR_ID != null and HR_ID != ''">
				and hr_id = #{HR_ID}
			</if>
			<if test="hj_type != null and hj_type != ''">
				and hj_type = #{hj_type}
			</if>
			<if test="IS_JOB != null and IS_JOB != ''">
				and IS_JOB = #{IS_JOB}
			</if>
			<if test="jntcSet != null">
				and a.hr_id in 
				<foreach collection="jntcSet" index="index" item="item" open="(" separator="union all" close=")">
              		select hr_id from v_hr_jntc where UTL_MATCH.edit_distance_similarity(v_hr_jntc.jntc, #{item}) >= 60      
        		</foreach>  
			</if>
			<if test="wantJobNameSet != null">
				and a.hr_id in 
				<foreach collection="wantJobNameSet" index="index" item="item" open="(" separator="union all" close=")">
              		select hr_id from V_HR_WANT_JOB_NAME where UTL_MATCH.edit_distance_similarity(V_HR_WANT_JOB_NAME.WANT_JOB_NAME, #{item}) >= 60      
        		</foreach>  
			</if>
			<if test="nation != null and nation != ''">
				and nation = #{nation}
			</if>
			<if test="political_status != null and political_status != ''">
				and political_status = #{political_status}
			</if>
			<if test="marry_status != null and marry_status != ''">
				and marry_status = #{marry_status}
			</if>
			<if test="degree != null and degree != ''">
				and degree = #{degree}
			</if>
			<if test="is_poor != null and is_poor != ''">
				and is_poor = #{is_poor}
			</if>
			<if test="job_lv != null and job_lv != ''">
				and job_lv = #{job_lv}
			</if>
			<if test="hr_kind != null and hr_kind != ''">
				and hr_kind = #{hr_kind}
			</if>
			<if test="hard_type != null and hard_type != ''">
				and hard_type = #{hard_type}
			</if>
			<if test="want_industry != null and want_industry != ''">
				and want_industry = #{want_industry}
			</if>
			<if test="want_work_area_kind != null and want_work_area_kind != ''">
				and want_work_area_kind = #{want_work_area_kind}
			</if>
			<if test="want_job_type != null and want_job_type != ''">
				and want_job_type = #{want_job_type}
			</if>
			<if test='is_label != null and is_label == "0"'>
				and not exists (select 1 from bs_hr_label cc where cc.hr_id = a.hr_id and cc.c_id = #{lable_cid})
			</if>
			<if test='is_label != null and is_label == "1"'>
				and exists (select 1 from bs_hr_label cc where cc.hr_id = a.hr_id and cc.c_id = #{lable_cid})
			</if>
			<if test="want_train_type != null and want_train_type != ''">
				and exists (select 1 from BS_H_WANT_TRAIN_TYPE b where a.hr_id = b.hr_id and b.train_type = #{want_train_type})
			</if>
			<if test="IS_WANT_JOB != null and IS_WANT_JOB != ''">
				and IS_WANT_JOB = #{IS_WANT_JOB}
			</if>
			<if test="HJ_AREA != null and HJ_AREA != ''">
				<choose>
					<when test="HJ_AREA_BJ != null and HJ_AREA_BJ  != ''">
						and hj_area = #{HJ_AREA}
					</when>
					<otherwise>
						<choose>
							<when test="HJ_AREA_LEVEL == 0">
								and province_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 1">
								and city_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 2">
								and country_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 3">
								and street_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 4">
								and village_code_hj = #{HJ_AREA}
							</when>
						</choose>
					</otherwise>
				</choose>
			</if>
		</where>
		<if test="record_count == null and order != null and order != ''">
				order by ${sort} ${order}
		</if>
		<if test="record_count == null and order == null or order == ''">
				order by hj_area, idcard
		</if>
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectBs_h_want_train_type" resultType="hashMap"
		parameterType="hashMap">
		select * from bs_h_want_train_type
		<where>
			<if test="HR_ID != null and HR_ID != ''">
				hr_id = #{HR_ID}
			</if>
		</where>
	</select>
	
	<select id="selectHr_cbxx" resultType="hashMap"
		parameterType="hashMap">
		select * from HR_CBXX
		<where>
			<if test="HR_ID != null and HR_ID != ''">
				hr_id = #{HR_ID}
			</if>
		</where>
	</select>
	
	<select id="selectV_last_h_job" resultType="hashMap"
		parameterType="hashMap">
		select * from v_last_h_job
		<where>
			<if test="HR_ID != null and HR_ID != ''">
				hr_id = #{HR_ID}
			</if>
		</where>
	</select>
	
	<sql id="jobNojobDetail">
		from v_jobnojob_list_name a inner join V_BUSI_HR b on a.hr_id = b.hr_id left outer join v_company_account  c on a.OPR_ID = c.c_id
		<where>
			<if test="HR_ID != null and HR_ID != ''">
				a.hr_id = #{HR_ID}
			</if>
			<if test="opr_id != null and opr_id != ''">
				and a.opr_id = #{opr_id}
			</if>
			<if test="opr_type != null and opr_type != ''">
				and a.opr_type = #{opr_type}
			</if>
			<if test="in_time_bgn != null and in_time_bgn != ''">
				and a.in_time >= to_date(#{in_time_bgn}, 'yyyy-mm-dd')
			</if>
			<if test="in_time_end != null and in_time_end != ''">
				and a.in_time &lt; to_date(#{in_time_end}, 'yyyy-mm-dd')
			</if>
			<if test="HJ_AREA != null and HJ_AREA != ''">
				<choose>
					<when test="HJ_AREA_BJ != null and HJ_AREA_BJ  != ''">
						and b.hj_area = #{HJ_AREA}
					</when>
					<otherwise>
						<choose>
							<when test="HJ_AREA_LEVEL == 0">
								and b.province_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 1">
								and b.city_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 2">
								and b.country_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 3">
								and b.street_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 4">
								and b.village_code_hj = #{HJ_AREA}
							</when>
						</choose>
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

	<select id="selectBs_job_nojob" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			a.*, b.hr_name, b.hj_area_name, c.c_name
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		<include refid="jobNojobDetail"/>
		order by job_time desc
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectBs_job_nojob_tj" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			aa.province_name,
	       	aa.city_name,
	       	aa.COUNTRY_name,
	       	aa.street_name,
	       	aa.village_name,
	       	aa.AREA_CODE,
	       	aa.AREA_NAME,
	       	bb.job_count,
	       	bb.c_id,
	       	bb.c_name
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		  from v_com_area aa
 		  inner join (select hj_area, c_id, c_name, count(1) as job_count
               from (
		select *  <include refid="jobNojobDetail"/>
		order by job_time desc
		) group by hj_area, c_id, c_name) bb
		    on aa.AREA_CODE = bb.hj_area
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>

	<select id="selectV_jobnojob_last_list" resultType="hashMap"
		parameterType="hashMap">
		select * from v_jobnojob_last_list
		<where>
			<if test="HR_ID != null and HR_ID != ''">
				hr_id = #{HR_ID}
			</if>
		</where>
		order by job_time desc
	</select>

	<select id="selectBs_company" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			*
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from bs_company
		<where>
			<if test="C_NAME_LIKE != null and C_NAME_LIKE != ''">
				C_NAME like #{C_NAME_LIKE} || '%'
			</if>
			<if test="C_NAME != null and C_NAME != ''">
				and C_NAME = #{C_NAME}
			</if>
			<if test="C_ID != null and C_ID != ''">
				and C_ID = #{C_ID}
			</if>
			<if test="C_TYPE != null and C_TYPE != ''">
				and C_TYPE = #{C_TYPE}
			</if>
			<if test="C_ID_WT != null and C_ID_WT != ''">
				and C_ID_WT = #{C_ID_WT}
			</if>
			<if test="C_ID_MGE != null and C_ID_MGE != ''">
				and (C_ID = #{C_ID_MGE} or C_ID_WT = #{C_ID_MGE})
			</if>
		</where>
		order by in_time desc
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>

	<select id="selectBs_position" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			v_bs_position.*, bs_company.c_name
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from v_bs_position inner join bs_company on v_bs_position.c_id =
		bs_company.c_id
		<where>
			<if test="P_NAME_LIKE != null and P_NAME_LIKE != ''">
				P_NAME like #{P_NAME_LIKE} || '%'
			</if>
			<if test="P_ID != null and P_ID != ''">
				and P_ID = #{P_ID}
			</if>
			<if test="C_ID != null and C_ID != ''">
				and (v_bs_position.C_ID = #{C_ID} or bs_company.C_ID_WT =
				#{C_ID})
			</if>
			<if test="P_STATUS != null and P_STATUS != ''">
				and P_STATUS = #{P_STATUS}
			</if>
			<if test="P_NAME != null and P_NAME != ''">
				and P_NAME = #{P_NAME}
			</if>
			<if test="pNameSet != null">
			    and
				<foreach collection="pNameSet" item="item" open="(" separator="or" close=")">
              		UTL_MATCH.edit_distance_similarity(P_NAME, #{item}) >= 60      
        		</foreach>  
			</if>
			<if test="VALID != null and VALID != ''">
				and P_STATUS = '1' and end_time >= to_char(sysdate,
				'yyyy-mm-dd')
			</if>
			<if test="pay_botton_bgn != null and pay_botton_bgn != ''">
				and pay_botton >= #{pay_botton_bgn}
			</if>
			<if test="P_WORK_AREA != null and P_WORK_AREA != ''">
				<choose>
					<when test="P_WORK_AREA_LEVEL == 0">
						and p_work_area_province_code = #{P_WORK_AREA}
					</when>
					<when test="P_WORK_AREA_LEVEL == 1">
						and p_work_area_city_code = #{P_WORK_AREA}
					</when>
					<when test="P_WORK_AREA_LEVEL == 2">
						and p_work_area_country_code = #{P_WORK_AREA}
					</when>
					<when test="P_WORK_AREA_LEVEL == 3">
						and p_work_area_street_code = #{P_WORK_AREA}
					</when>
					<when test="P_WORK_AREA_LEVEL == 4">
						and p_work_area_village_code = #{P_WORK_AREA}
					</when>
				</choose>
			</if>
		</where>
		order by v_bs_position.in_time desc
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>

	<select id="selectBs_position_req" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			v_bs_position_req.*, V_BS_POSITION.p_name, V_BS_POSITION.p_work_area_name, V_BS_POSITION.p_work_area,V_BS_POSITION.p_pay_botton,
			bs_company.c_name, V_BUSI_HR.hr_name, V_BUSI_HR.age, V_BUSI_HR.sex_name, V_BUSI_HR.degree_name, V_BUSI_HR.jntc, V_BUSI_HR.hj_area_name,
			V_BUSI_HR.IDCARD_COVERD,V_BUSI_HR.IDCARD, BS_POSITION_REQ_VIDEO.is_open
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from v_bs_position_req
		inner join V_BS_POSITION
		on v_bs_position_req.P_ID = V_BS_POSITION.P_ID
		inner join bs_company
		on V_BS_POSITION.c_id = bs_company.c_id
		inner join V_BUSI_HR
		on V_BUSI_HR.hr_id = v_bs_position_req.HR_ID
		left outer join BS_POSITION_REQ_VIDEO on BS_POSITION_REQ_VIDEO.req_id = v_bs_position_req.req_id
		<where>
			<if test="P_ID != null and P_ID != ''">
				v_bs_position_req.P_ID = #{P_ID}
			</if>
			<if test="REQ_ID != null and REQ_ID != ''">
				and v_bs_position_req.REQ_ID = #{REQ_ID}
			</if>
			<if test="HR_ID != null and HR_ID != ''">
				and v_bs_position_req.HR_ID = #{HR_ID}
			</if>
			<if test="C_ID != null and C_ID != ''">
				and bs_company.C_ID = #{C_ID}
			</if>
			<if test="owner_id != null and owner_id != ''">
				and (bs_company.C_ID = #{owner_id} or bs_company.c_type = '4' and c_id_wt = #{owner_id})
			</if>
			<if test="req_status != null and req_status != ''">
				and v_bs_position_req.req_status = #{req_status}
			</if>
			<if test="P_NAME_LIKE != null and P_NAME_LIKE != ''">
				and bs_position.p_name like '%' || #{P_NAME_LIKE} || '%'
			</if>
		</where>
		order by v_bs_position_req.in_time desc
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectV_com_area" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			*
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from v_com_area
		<where>
			<if test="area_name_like != null and area_name_like != ''">
				area_name like '%' || #{area_name_like} || '%'
			</if>
			<if test="area_code_high != null and area_code_high != ''">
				<choose>
					<when test="area_code_high_level == 0">
						and province_code = #{area_code_high}
					</when>
					<when test="area_code_high_level == 1">
						and city_code = #{area_code_high}
					</when>
					<when test="area_code_high_level == 2">
						and country_code = #{area_code_high}
					</when>
					<when test="area_code_high_level == 3">
						and street_code = #{area_code_high}
					</when>
					<when test="area_code_high_level == 4">
						and village_code = #{area_code_high}
					</when>
				</choose>
			</if>
		</where>
		order by area_code
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectV_c_area_video_last" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			b.c_name, a.*
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from bs_c_area_video a
		 inner join bs_company b
		    on a.C_ID = b.c_id
		<where>
			<if test="area_code != null and area_code != ''">
				area_code =  #{area_code}
			</if>
			<if test="c_area_video_id != null and c_area_video_id != ''">
				and c_area_video_id =  #{c_area_video_id}
			</if>
		</where>
		order by a.IN_TIME desc
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectBs_s_area_phone" resultType="hashMap"
		parameterType="hashMap">
		select * from BS_S_AREA_PHONE
		<where>
			<if test="area_code != null and area_code != ''">
				AREA_CODE = #{area_code}
			</if>
		</where>
	</select>
	
	<insert id="insertBs_hr_imp_pre"  parameterType="hashMap">  
   		insert into BS_HR_IMP_PRE (  
   					batch_id,
   					row_no,
					hr_name ,
					idcard,
					hj_area_name ,
					nation_name,
					degree_name,
					school,
					gra_year,
					pro ,
					address ,
					phone ,
					qq,
					email ,
					jntc,
					is_job,
					is_want_job,
					job_time,
					job_area_name,
					job_type_name,
					job_dw,
					job_gw,
					income,
					want_job_area_name ,
					want_income,
					want_job_name)   
		values (#{batchId},
   		<foreach collection="row" item="item" separator=" , " >  
       		 #{item} 
    	</foreach>  
    	)
	</insert> 
	
	<select id="f_hr_imp_deal" statementType="CALLABLE" parameterType="hashMap">  
 		{#{result,mode=OUT,jdbcType=VARCHAR} = call f_hr_imp_deal(#{batch_id,mode=IN,jdbcType=VARCHAR},
 																	#{opr_id,mode=IN,jdbcType=VARCHAR},
 																	#{opr_type,mode=IN,jdbcType=VARCHAR},
 																	#{opr_area,mode=IN,jdbcType=VARCHAR})}  
 	</select>
 	
 	<select id="selectBs_hr_imp_pre" resultType="hashMap"
		parameterType="string">
		select row_no, error_info from BS_HR_IMP_PRE where batch_id = #{batch_id} and error_info is not null
	</select>
	
	<select id="selectV_hr_position" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			*
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		from v_hr_position a
		<where>
			<if test="HR_NAME_LIKE != null and HR_NAME_LIKE != ''">
				hr_name like #{HR_NAME_LIKE} || '%'
			</if>
			<if test="IDCARD_LIKE != null and IDCARD_LIKE != ''">
				and idcard like #{IDCARD_LIKE} || '%'
			</if>
			<if test="IS_JOB != null and IS_JOB != ''">
				and IS_JOB = #{IS_JOB}
			</if>
			<if test="HJ_AREA != null and HJ_AREA != ''">
				<choose>
					<when test="HJ_AREA_BJ != null and HJ_AREA_BJ  != ''">
						and hj_area = #{HJ_AREA}
					</when>
					<otherwise>
						<choose>
							<when test="HJ_AREA_LEVEL == 0">
								and province_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 1">
								and city_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 2">
								and country_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 3">
								and street_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 4">
								and village_code_hj = #{HJ_AREA}
							</when>
						</choose>
					</otherwise>
				</choose>
			</if>
		</where>
		order by a.hr_id, c_id
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectBs_c_hire" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			a.*, b.HR_NAME, b.HJ_AREA, b.hj_area_name, c.c_name, 
			to_char(a.in_time, 'yyyy-mm-dd') as in_time_str,
			to_char(add_months(to_date(hire_time, 'yyyy-mm-dd'), nvl(sy_month, 0)), 'yyyy-mm-dd') as sy_end_time_str,
			d.code_value as is_wd_name
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		  from bs_c_hire a
		 inner join v_busi_hr b
		    on a.hr_id = b.hr_id
		 inner join bs_company c
		    on c.c_id = a.c_id	
		 inner join v_code_map_boolean d
		 	on a.is_wd = d.code_key	    
		<where>
			<if test="in_time_bgn != null and in_time_bgn != ''">
				a.in_time >= to_date(#{in_time_bgn}, 'yyyy-mm-dd')
			</if>
			<if test="in_time_end != null and in_time_end != ''">
				and a.in_time &lt;= to_date(#{in_time_end}, 'yyyy-mm-dd')
			</if>
			<if test="c_id != null and c_id != ''">
				and a.c_id = #{c_id}
			</if>
			<if test="is_zz != null and is_zz != ''" >
				and a.is_wd = #{is_zz}
			</if>
			<if test='is_overtime == "0"' >
				and a.hire_time > to_char(add_months(sysdate, sy_month * -1), 'yyyy-mm-dd')
			</if>
			<if test='is_overtime == "1"' >
				and a.hire_time &lt; to_char(add_months(sysdate, sy_month * -1), 'yyyy-mm-dd')
			</if>
			<if test='is_quit == "0"' >
				and a.quit_time is null
			</if>
			<if test='is_quit == "1"' >
				and a.quit_time is not null
			</if>
			<if test="HJ_AREA != null and HJ_AREA != ''">
				<choose>
					<when test="HJ_AREA_BJ != null and HJ_AREA_BJ  != ''">
						and hj_area = #{HJ_AREA}
					</when>
					<otherwise>
						<choose>
							<when test="HJ_AREA_LEVEL == 0">
								and province_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 1">
								and city_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 2">
								and country_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 3">
								and street_code_hj = #{HJ_AREA}
							</when>
							<when test="HJ_AREA_LEVEL == 4">
								and village_code_hj = #{HJ_AREA}
							</when>
						</choose>
					</otherwise>
				</choose>
			</if>
		</where>
		<if test="record_count == null">
		order by a.hire_time desc
		</if>
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>
	
	<select id="selectBusi_hr_job_tj" resultType="hashMap"
		parameterType="hashMap">
		<if test="record_count == null and page != null and page != ''">
			select * from (select rownum as rowidx, qry.* from (
		</if>
		select
		<if test="record_count == null">
			a.area_name, b.*
		</if>
		<if test="record_count != null">
			count(1) as record_count
		</if>
		  from (select *
		          from com_area
		         where area_level = #{area_level}
		         <if test='area_scope_level == "1"'>and city_code = #{area_scope}</if>
		         <if test='area_scope_level == "2"'>and country_code = #{area_scope}</if>
		         <if test='area_scope_level == "3"'>and STREET_CODE = #{area_scope}</if>
		         <if test='area_scope_level == "4"'>and VILLAGE_CODE = #{area_scope}</if>
		           ) a
		 inner join (select area_code,
		                    all_count,
		                    ldl,
		                    jobed,
		                    want_job,
		                    want_job_country,
		                    want_job_city,
		                    want_job_shen,
		                    want_job_guo,
		                    want_job_jw,
		                    ldl - jobed as nojob,
		                    ldl - jobed - want_job as no_want_job,
		                    decode((jobed+want_job), 0, 100, ROUND(jobed*100/(jobed+want_job), 2)) as jyl
		               from (select area_code,
		                            count(1) as all_count,
		                            sum(ldl) as ldl,
		                            sum(jobed) as jobed,
		                            sum(want_job) as want_job,
		                            sum(want_job_country) as want_job_country,
		                            sum(want_job_city) as want_job_city,
		                            sum(want_job_shen) as want_job_shen,
		                            sum(want_job_guo) as want_job_guo,
		                            sum(want_job_jw) as want_job_jw
		                       from (select <if test='area_level == "2"'>b.country_code</if>
		                       <if test='area_level == "3"'>b.STREET_CODE</if>
		                       <if test='area_level == "4"'>b.VILLAGE_CODE</if> as area_code,
		                       				decode(ld_type, '1', 1, 0) as ldl,
		                                    case
		                                      when ld_type = '1' and is_job = '1' then
		                                       1
		                                      else
		                                       0
		                                    end as jobed,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' and
		                                           WANT_WORK_AREA_KIND = '10' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job_country,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' and
		                                           WANT_WORK_AREA_KIND = '20' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job_city,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' and
		                                           WANT_WORK_AREA_KIND = '30' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job_shen,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' and
		                                           WANT_WORK_AREA_KIND = '40' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job_guo,
		                                    case
		                                      when ld_type = '1' and is_job = '0' and is_want_job = '1' and
		                                           WANT_WORK_AREA_KIND = '50' then
		                                       1
		                                      else
		                                       0
		                                    end as want_job_jw
		                               from busi_hr a
		                              inner join v_com_area_all_name b
		                                 on a.hj_area = b.AREA_CODE)
		                      group by area_code)) b
		    on a.area_code = b.AREA_CODE  
		<if test="record_count == null">
		order by a.area_code
		</if>
		<if test="record_count == null and page != null and page != ''">
			)qry ) where rowidx > (#{page} - 1) * #{rows} and rowidx
			&lt;= #{page} * #{rows}
		</if>
	</select>

</mapper>